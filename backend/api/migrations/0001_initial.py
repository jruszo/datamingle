# Generated by Django 5.2.4 on 2025-08-06 17:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('database_type', models.CharField(choices=[('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('mongodb', 'MongoDB'), ('tidb', 'TiDB'), ('clickhouse', 'ClickHouse')], max_length=20)),
                ('replication_type', models.CharField(choices=[('none', 'None'), ('async', 'Asynchronous Replication'), ('galera', 'Galera Cluster'), ('postgres_replication', 'PostgreSQL Replication'), ('mongo_replication', 'MongoDB Replication')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DatabaseServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('hostname', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('database_type', models.CharField(choices=[('postgresql', 'PostgreSQL'), ('mysql', 'MySQL'), ('mongodb', 'MongoDB'), ('tidb', 'TiDB'), ('clickhouse', 'ClickHouse')], max_length=20)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoadBalancer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('hostname', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('load_balancer_type', models.CharField(choices=[('pgbouncer', 'PgBouncer'), ('proxysql', 'ProxySQL'), ('haproxy', 'HAProxy'), ('mongos', 'Mongos')], max_length=20)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.cluster')),
                ('server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.databaseserver')),
                ('load_balancer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.loadbalancer')),
            ],
        ),
        migrations.CreateModel(
            name='Shard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shards', to='api.cluster')),
            ],
            options={
                'unique_together': {('name', 'cluster')},
            },
        ),
        migrations.CreateModel(
            name='ShardKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('key_fields', models.JSONField(help_text='List of fields used for sharding')),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shard_keys', to='api.cluster')),
            ],
            options={
                'unique_together': {('name', 'cluster')},
            },
        ),
        migrations.CreateModel(
            name='ClusterServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(help_text='e.g. primary, secondary, arbiter', max_length=50)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='api.cluster')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.databaseserver')),
            ],
            options={
                'unique_together': {('cluster', 'server')},
            },
        ),
        migrations.CreateModel(
            name='ClusterLoadBalancer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='load_balancers', to='api.cluster')),
                ('load_balancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.loadbalancer')),
            ],
            options={
                'unique_together': {('cluster', 'load_balancer')},
            },
        ),
        migrations.CreateModel(
            name='ShardMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_range_start', models.TextField(help_text='Start of key range (inclusive)')),
                ('key_range_end', models.TextField(help_text='End of key range (exclusive)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shard')),
                ('shard_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.shardkey')),
            ],
            options={
                'unique_together': {('shard', 'shard_key')},
            },
        ),
        migrations.CreateModel(
            name='ShardServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(help_text='e.g. primary, secondary', max_length=50)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.databaseserver')),
                ('shard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='api.shard')),
            ],
            options={
                'unique_together': {('shard', 'server')},
            },
        ),
    ]
